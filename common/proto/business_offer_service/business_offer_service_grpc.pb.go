// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.20.1
// source: common/proto/business_offer_service/business_offer_service.proto

package business_offer

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BusinessOffersServiceClient is the client API for BusinessOffersService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BusinessOffersServiceClient interface {
	InsertBusinessOffer(ctx context.Context, in *InsertOfferRequest, opts ...grpc.CallOption) (*InsertOfferResponse, error)
	InsertSkill(ctx context.Context, in *InsertSkillsRequest, opts ...grpc.CallOption) (*InsertSkillsResponse, error)
	GetBusinessOffers(ctx context.Context, in *GetAllOffersRequest, opts ...grpc.CallOption) (*GetAllOffersResponse, error)
	GetBusinessOfferRecommendations(ctx context.Context, in *RecommendationsRequest, opts ...grpc.CallOption) (*RecommendationsResponse, error)
}

type businessOffersServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBusinessOffersServiceClient(cc grpc.ClientConnInterface) BusinessOffersServiceClient {
	return &businessOffersServiceClient{cc}
}

func (c *businessOffersServiceClient) InsertBusinessOffer(ctx context.Context, in *InsertOfferRequest, opts ...grpc.CallOption) (*InsertOfferResponse, error) {
	out := new(InsertOfferResponse)
	err := c.cc.Invoke(ctx, "/business_offer.BusinessOffersService/InsertBusinessOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *businessOffersServiceClient) InsertSkill(ctx context.Context, in *InsertSkillsRequest, opts ...grpc.CallOption) (*InsertSkillsResponse, error) {
	out := new(InsertSkillsResponse)
	err := c.cc.Invoke(ctx, "/business_offer.BusinessOffersService/InsertSkill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *businessOffersServiceClient) GetBusinessOffers(ctx context.Context, in *GetAllOffersRequest, opts ...grpc.CallOption) (*GetAllOffersResponse, error) {
	out := new(GetAllOffersResponse)
	err := c.cc.Invoke(ctx, "/business_offer.BusinessOffersService/GetBusinessOffers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *businessOffersServiceClient) GetBusinessOfferRecommendations(ctx context.Context, in *RecommendationsRequest, opts ...grpc.CallOption) (*RecommendationsResponse, error) {
	out := new(RecommendationsResponse)
	err := c.cc.Invoke(ctx, "/business_offer.BusinessOffersService/GetBusinessOfferRecommendations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BusinessOffersServiceServer is the server API for BusinessOffersService service.
// All implementations must embed UnimplementedBusinessOffersServiceServer
// for forward compatibility
type BusinessOffersServiceServer interface {
	InsertBusinessOffer(context.Context, *InsertOfferRequest) (*InsertOfferResponse, error)
	InsertSkill(context.Context, *InsertSkillsRequest) (*InsertSkillsResponse, error)
	GetBusinessOffers(context.Context, *GetAllOffersRequest) (*GetAllOffersResponse, error)
	GetBusinessOfferRecommendations(context.Context, *RecommendationsRequest) (*RecommendationsResponse, error)
	mustEmbedUnimplementedBusinessOffersServiceServer()
}

// UnimplementedBusinessOffersServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBusinessOffersServiceServer struct {
}

func (UnimplementedBusinessOffersServiceServer) InsertBusinessOffer(context.Context, *InsertOfferRequest) (*InsertOfferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertBusinessOffer not implemented")
}
func (UnimplementedBusinessOffersServiceServer) InsertSkill(context.Context, *InsertSkillsRequest) (*InsertSkillsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertSkill not implemented")
}
func (UnimplementedBusinessOffersServiceServer) GetBusinessOffers(context.Context, *GetAllOffersRequest) (*GetAllOffersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBusinessOffers not implemented")
}
func (UnimplementedBusinessOffersServiceServer) GetBusinessOfferRecommendations(context.Context, *RecommendationsRequest) (*RecommendationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBusinessOfferRecommendations not implemented")
}
func (UnimplementedBusinessOffersServiceServer) mustEmbedUnimplementedBusinessOffersServiceServer() {}

// UnsafeBusinessOffersServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BusinessOffersServiceServer will
// result in compilation errors.
type UnsafeBusinessOffersServiceServer interface {
	mustEmbedUnimplementedBusinessOffersServiceServer()
}

func RegisterBusinessOffersServiceServer(s grpc.ServiceRegistrar, srv BusinessOffersServiceServer) {
	s.RegisterService(&BusinessOffersService_ServiceDesc, srv)
}

func _BusinessOffersService_InsertBusinessOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertOfferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessOffersServiceServer).InsertBusinessOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/business_offer.BusinessOffersService/InsertBusinessOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessOffersServiceServer).InsertBusinessOffer(ctx, req.(*InsertOfferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BusinessOffersService_InsertSkill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertSkillsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessOffersServiceServer).InsertSkill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/business_offer.BusinessOffersService/InsertSkill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessOffersServiceServer).InsertSkill(ctx, req.(*InsertSkillsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BusinessOffersService_GetBusinessOffers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllOffersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessOffersServiceServer).GetBusinessOffers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/business_offer.BusinessOffersService/GetBusinessOffers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessOffersServiceServer).GetBusinessOffers(ctx, req.(*GetAllOffersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BusinessOffersService_GetBusinessOfferRecommendations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecommendationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusinessOffersServiceServer).GetBusinessOfferRecommendations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/business_offer.BusinessOffersService/GetBusinessOfferRecommendations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusinessOffersServiceServer).GetBusinessOfferRecommendations(ctx, req.(*RecommendationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BusinessOffersService_ServiceDesc is the grpc.ServiceDesc for BusinessOffersService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BusinessOffersService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "business_offer.BusinessOffersService",
	HandlerType: (*BusinessOffersServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InsertBusinessOffer",
			Handler:    _BusinessOffersService_InsertBusinessOffer_Handler,
		},
		{
			MethodName: "InsertSkill",
			Handler:    _BusinessOffersService_InsertSkill_Handler,
		},
		{
			MethodName: "GetBusinessOffers",
			Handler:    _BusinessOffersService_GetBusinessOffers_Handler,
		},
		{
			MethodName: "GetBusinessOfferRecommendations",
			Handler:    _BusinessOffersService_GetBusinessOfferRecommendations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "common/proto/business_offer_service/business_offer_service.proto",
}
